version: "3.9"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_started
    networks:
      - app-network

  app:
    build:
      context: .
    container_name: node-app
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - MONGO_URI=mongodb://mongodb:27017/mydb
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - app-network

  mongodb:
    image: mongo:6.0.5
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://elasticsearch:9200/_cluster/health | grep -q '\"status\":\"yellow\"\\|\"status\":\"green\"'",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    environment:
      - HOSTNAME=telegraf
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    networks:
      - app-network

  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword
      - INFLUXDB_DB=metrics
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  mongo-data:
  es-data:
  influxdb-data:
  grafana-data:

networks:
  app-network:
    driver: bridge
